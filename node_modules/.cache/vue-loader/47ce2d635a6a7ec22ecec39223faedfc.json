{"remainingRequest":"D:\\project\\seat\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\project\\seat\\src\\components\\com\\kuang.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\project\\seat\\src\\components\\com\\kuang.vue","mtime":1624009101818},{"path":"D:\\project\\seat\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\project\\seat\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\project\\seat\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\project\\seat\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n    name: \"Hello\",\r\n    props: {\r\n        txtlist:{\r\n            type:Object,\r\n            default:function () {\r\n            return {\r\n                x1: 370,\r\n                y1: 10,\r\n                x2: 980,\r\n                y2: 490,\r\n            }\r\n            }\r\n        },\r\n        persons:Array,\r\n        options:Object,\r\n\r\n    },\r\n    data() {\r\n        return {\r\n            xinxi: [],\r\n            items: [],\r\n            seat: [],\r\n            sort: [],\r\n            sum: 0,\r\n        };\r\n    },\r\n    created() {\r\n        const app = this;\r\n        this.$axios\r\n            .getDistributeData()\r\n            .then((res) => {\r\n                app.xinxi = res.data.data.confSeats;\r\n            })\r\n            .catch(function(res) {\r\n                console.log(res.data);\r\n            });\r\n    },\r\n    mounted: function() {\r\n        var rector = $(\"#selectionRect\");\r\n\r\n        //拖选起点\r\n        var startX = 0;\r\n        var startY = 0;\r\n        //选择框核心代码\r\n\r\n        function resizeToPoint(x, y) {\r\n            var width = Math.abs(x - startX);\r\n            var height = Math.abs(y - startY);\r\n            rector.width(width);\r\n            rector.height(height);\r\n            //当鼠标x方向上为向左拖动 设置left位置\r\n            if (x < startX) {\r\n                rector.css({\r\n                    left: startX - width + \"px\",\r\n                });\r\n            }\r\n            //当鼠标y方向上为向上拖动 设置top位置\r\n            if (y < startY) {\r\n                rector.css({\r\n                    top: startY - height + \"px\",\r\n                });\r\n            }\r\n        }\r\n\r\n        /**\r\n         *核心相交算法\r\n         * @param rect1{x1,y1,x2,y2}\r\n         * @param rect2 {x1,y1,x2,y2}\r\n         */\r\n        \r\n        /**\r\n         *获取元素的矩形的起始点坐标与其对角点坐标\r\n         * @param $el\r\n         * @return {x1,y1,x2,y2}\r\n         */\r\n        \r\n        \r\n        //框选处理 如果元素与选择框相交则设置样式\r\n        \r\n\r\n        \r\n        \r\n    },\r\n    watch: {\r\n        options: {\r\n            handler: function(newVal, oldVal) {\r\n                this.seatSort();\r\n                // console.log(11111,newVal,oldVal)\r\n                // console.log(this.options)\r\n            },\r\n            deep: true,\r\n        },\r\n        persons: {\r\n            handler: function(newVal, oldVal) {\r\n                \r\n                this.sortPerson();\r\n            },\r\n            deep: true,\r\n        },\r\n        txtlist:{\r\n            handler:function(newVal,oldVal){\r\n                this.handleRectSelection(this.txtlist)\r\n            },\r\n            deep:true,\r\n        }\r\n    },\r\n    methods: {\r\n        seatSort() {\r\n            var oT1 = document.querySelectorAll(\".t1\");\r\n            for (var i = 0; i < oT1.length; i++) {\r\n                for (var j = 0; j < this.seat.length; j++) {\r\n                    if (i == this.seat[j]) {\r\n                        var a = \"\";\r\n                        var r,w = 0;\r\n                        r = Math.ceil((i + 1) / 30);\r\n                        w = parseInt((i + 1) % 30);\r\n                        a = r + \"-\" + w;\r\n                        oT1[i].innerText = this.options[a];\r\n                        // oT1[i].className += \"choose\";\r\n                        this.GLOBAL.baseURL[j][\"orderMark\"] = parseInt(this.options[a]);\r\n                    }\r\n                }\r\n            }\r\n            this.seat=[]\r\n        },\r\n        handleRectSelection(data) {\r\n            var a = \"\";\r\n            const app = this;\r\n            $(\".t1\").each(function(index) {\r\n                var rect = app.getRect($(this));\r\n                app.xinxi[index][\"blockId\"] = 1;\r\n                if (app.isCross(data, rect)) {\r\n                    app.seat.push(index);\r\n                    app.items.push(app.xinxi[index]);\r\n                    $(this).addClass(\"selected\");\r\n                } else {\r\n                    $(this).text('')\r\n                    $(this).removeClass(\"selected\");\r\n                }\r\n            });\r\n            this.GLOBAL.baseURL = app.items;\r\n            console.log(app.items)\r\n            app.items=[]\r\n        },\r\n        getRect($el) {\r\n            var x1 = $el.offset().left;\r\n            var y1 = $el.offset().top;\r\n            var x2 = x1 + $el.outerWidth();\r\n            var y2 = y1 + $el.outerHeight();\r\n            return { x1, x2, y1, y2 };\r\n        },\r\n        isCross(rect1, rect2) {\r\n            var xNotCross = true; //x方向上不重合\r\n            var yNotCross = true; //y方向上不重合\r\n            xNotCross = rect1.x1 > rect2.x2 || rect2.x1 > rect1.x2;\r\n            yNotCross = rect1.y1 > rect2.y2 || rect2.y1 > rect1.y2;\r\n            return !(xNotCross || yNotCross);\r\n        },\r\n        sortPerson(){\r\n            var oT1=document.querySelectorAll(\".t1\");\r\n\t\t\tfor(var i = 0;i<oT1.length;i++){\r\n\t\t\t\t\r\n\t\t\t\tfor (var j=0;j<this.seat.length;j++){\r\n\t\t\t\t\tif(i == this.seat[j]){\r\n                        \r\n                        console.log(this.persons[j]['userUnit'].des)\r\n\t\t\t\t\t\toT1[i].innerText=this.persons[j]['userUnit'].des\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n    },\r\n};\r\n",{"version":3,"sources":["kuang.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA","file":"kuang.vue","sourceRoot":"src/components/com","sourcesContent":["<template>\r\n    <div id=\"kz\" style=\"display: flex\">\r\n        <div v-for=\"index of 5\" class=\"main\" :key=\"index.id\">\r\n            <div class=\"table\"></div>\r\n            <div style=\"display: flex\">\r\n                <div class=\"t1\" v-for=\"index of 6\" :key=\"index.id\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"Hello\",\r\n    props: {\r\n        txtlist:{\r\n            type:Object,\r\n            default:function () {\r\n            return {\r\n                x1: 370,\r\n                y1: 10,\r\n                x2: 980,\r\n                y2: 490,\r\n            }\r\n            }\r\n        },\r\n        persons:Array,\r\n        options:Object,\r\n\r\n    },\r\n    data() {\r\n        return {\r\n            xinxi: [],\r\n            items: [],\r\n            seat: [],\r\n            sort: [],\r\n            sum: 0,\r\n        };\r\n    },\r\n    created() {\r\n        const app = this;\r\n        this.$axios\r\n            .getDistributeData()\r\n            .then((res) => {\r\n                app.xinxi = res.data.data.confSeats;\r\n            })\r\n            .catch(function(res) {\r\n                console.log(res.data);\r\n            });\r\n    },\r\n    mounted: function() {\r\n        var rector = $(\"#selectionRect\");\r\n\r\n        //拖选起点\r\n        var startX = 0;\r\n        var startY = 0;\r\n        //选择框核心代码\r\n\r\n        function resizeToPoint(x, y) {\r\n            var width = Math.abs(x - startX);\r\n            var height = Math.abs(y - startY);\r\n            rector.width(width);\r\n            rector.height(height);\r\n            //当鼠标x方向上为向左拖动 设置left位置\r\n            if (x < startX) {\r\n                rector.css({\r\n                    left: startX - width + \"px\",\r\n                });\r\n            }\r\n            //当鼠标y方向上为向上拖动 设置top位置\r\n            if (y < startY) {\r\n                rector.css({\r\n                    top: startY - height + \"px\",\r\n                });\r\n            }\r\n        }\r\n\r\n        /**\r\n         *核心相交算法\r\n         * @param rect1{x1,y1,x2,y2}\r\n         * @param rect2 {x1,y1,x2,y2}\r\n         */\r\n        \r\n        /**\r\n         *获取元素的矩形的起始点坐标与其对角点坐标\r\n         * @param $el\r\n         * @return {x1,y1,x2,y2}\r\n         */\r\n        \r\n        \r\n        //框选处理 如果元素与选择框相交则设置样式\r\n        \r\n\r\n        \r\n        \r\n    },\r\n    watch: {\r\n        options: {\r\n            handler: function(newVal, oldVal) {\r\n                this.seatSort();\r\n                // console.log(11111,newVal,oldVal)\r\n                // console.log(this.options)\r\n            },\r\n            deep: true,\r\n        },\r\n        persons: {\r\n            handler: function(newVal, oldVal) {\r\n                \r\n                this.sortPerson();\r\n            },\r\n            deep: true,\r\n        },\r\n        txtlist:{\r\n            handler:function(newVal,oldVal){\r\n                this.handleRectSelection(this.txtlist)\r\n            },\r\n            deep:true,\r\n        }\r\n    },\r\n    methods: {\r\n        seatSort() {\r\n            var oT1 = document.querySelectorAll(\".t1\");\r\n            for (var i = 0; i < oT1.length; i++) {\r\n                for (var j = 0; j < this.seat.length; j++) {\r\n                    if (i == this.seat[j]) {\r\n                        var a = \"\";\r\n                        var r,w = 0;\r\n                        r = Math.ceil((i + 1) / 30);\r\n                        w = parseInt((i + 1) % 30);\r\n                        a = r + \"-\" + w;\r\n                        oT1[i].innerText = this.options[a];\r\n                        // oT1[i].className += \"choose\";\r\n                        this.GLOBAL.baseURL[j][\"orderMark\"] = parseInt(this.options[a]);\r\n                    }\r\n                }\r\n            }\r\n            this.seat=[]\r\n        },\r\n        handleRectSelection(data) {\r\n            var a = \"\";\r\n            const app = this;\r\n            $(\".t1\").each(function(index) {\r\n                var rect = app.getRect($(this));\r\n                app.xinxi[index][\"blockId\"] = 1;\r\n                if (app.isCross(data, rect)) {\r\n                    app.seat.push(index);\r\n                    app.items.push(app.xinxi[index]);\r\n                    $(this).addClass(\"selected\");\r\n                } else {\r\n                    $(this).text('')\r\n                    $(this).removeClass(\"selected\");\r\n                }\r\n            });\r\n            this.GLOBAL.baseURL = app.items;\r\n            console.log(app.items)\r\n            app.items=[]\r\n        },\r\n        getRect($el) {\r\n            var x1 = $el.offset().left;\r\n            var y1 = $el.offset().top;\r\n            var x2 = x1 + $el.outerWidth();\r\n            var y2 = y1 + $el.outerHeight();\r\n            return { x1, x2, y1, y2 };\r\n        },\r\n        isCross(rect1, rect2) {\r\n            var xNotCross = true; //x方向上不重合\r\n            var yNotCross = true; //y方向上不重合\r\n            xNotCross = rect1.x1 > rect2.x2 || rect2.x1 > rect1.x2;\r\n            yNotCross = rect1.y1 > rect2.y2 || rect2.y1 > rect1.y2;\r\n            return !(xNotCross || yNotCross);\r\n        },\r\n        sortPerson(){\r\n            var oT1=document.querySelectorAll(\".t1\");\r\n\t\t\tfor(var i = 0;i<oT1.length;i++){\r\n\t\t\t\t\r\n\t\t\t\tfor (var j=0;j<this.seat.length;j++){\r\n\t\t\t\t\tif(i == this.seat[j]){\r\n                        \r\n                        console.log(this.persons[j]['userUnit'].des)\r\n\t\t\t\t\t\toT1[i].innerText=this.persons[j]['userUnit'].des\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.t1 {\r\n    width: 40px;\r\n    height: 20px;\r\n    margin: 5px;\r\n    background-color: rgb(135, 145, 153);\r\n    text-align: center;\r\n    color: #fff;\r\n}\r\n.selected {\r\n    width: 40px;\r\n    height: 20px;\r\n    margin: 5px;\r\n    text-align: center;\r\n    color: #fff;\r\n    background-color: red;\r\n}\r\n.selects {\r\n    width: 40px;\r\n    height: 20px;\r\n    margin: 5px;\r\n    text-align: center;\r\n    color: #fff;\r\n    background-color: #ff0;\r\n}\r\n.choose {\r\n    background-color: #000088;\r\n}\r\n.table {\r\n    width: 300px;\r\n    height: 30px;\r\n    background-color: rgb(191, 205, 214);\r\n}\r\n.main {\r\n    margin-left: 30px;\r\n    margin-bottom: 20px;\r\n}\r\n</style>\r\n"]}]}